{% comment %}
  Featured Products section for showcasing popular shoes
{% endcomment %}

<section class="section featured-products">
  <div class="page-width">
    <div class="section-header">
      {%- if section.settings.heading != blank -%}
        <h2 class="section-title">{{ section.settings.heading }}</h2>
      {%- endif -%}
      
      {%- if section.settings.description != blank -%}
        <p class="section-description">{{ section.settings.description }}</p>
      {%- endif -%}

      {%- if section.settings.show_view_all -%}
        <a href="{{ collections[section.settings.collection].url | default: '/collections/all' }}" 
           class="btn btn--secondary section-button">
          {{ section.settings.view_all_text | default: 'View All' }}
        </a>
      {%- endif -%}
    </div>

    {%- assign collection = collections[section.settings.collection] -%}
    {%- assign products_to_show = section.settings.products_to_show | default: 8 -%}
    
    {%- if collection != blank and collection.products.size > 0 -%}
      <div class="featured-products__grid">
        {%- for product in collection.products limit: products_to_show -%}
          <div class="featured-products__item animate-on-scroll">
            {% render 'product-card', product: product %}
          </div>
        {%- endfor -%}
      </div>
    {%- else -%}
      {% comment %} Fallback to all products if collection is empty {% endcomment %}
      <div class="featured-products__grid">
        {%- for product in collections.all.products limit: products_to_show -%}
          <div class="featured-products__item animate-on-scroll">
            {% render 'product-card', product: product %}
          </div>
        {%- endfor -%}
      </div>
    {%- endif -%}

    {%- if section.settings.enable_carousel -%}
      <div class="featured-products__navigation">
        <button type="button" class="carousel-btn carousel-btn--prev" aria-label="Previous products">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
            <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
        <button type="button" class="carousel-btn carousel-btn--next" aria-label="Next products">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
            <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
      </div>
      
      <div class="featured-products__dots">
        <!-- Dots will be generated by JavaScript -->
      </div>
    {%- endif -%}
  </div>
</section>

<style>
  .featured-products {
    background: {{ section.settings.background_color }};
    {% if section.settings.background_image %}
      background-image: url('{{ section.settings.background_image | image_url: width: 1920 }}');
      background-size: cover;
      background-position: center;
      background-repeat: no-repeat;
    {% endif %}
  }

  .section-header {
    text-align: center;
    margin-bottom: 4rem;
    max-width: 80rem;
    margin-left: auto;
    margin-right: auto;
  }

  .section-title {
    font-size: {{ section.settings.heading_size }}rem;
    margin-bottom: 1.5rem;
    color: {{ section.settings.heading_color }};
  }

  .section-description {
    font-size: {{ section.settings.description_size }}rem;
    color: {{ section.settings.text_color }};
    margin-bottom: 2rem;
    line-height: 1.6;
  }

  .section-button {
    margin-top: 1rem;
  }

  .featured-products__grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: var(--grid-mobile-horizontal-spacing) var(--grid-mobile-vertical-spacing);
    {% if section.settings.enable_carousel %}
      overflow-x: auto;
      scroll-snap-type: x mandatory;
      scrollbar-width: none;
      -ms-overflow-style: none;
      padding-bottom: 1rem;
      grid-auto-flow: column;
      grid-template-columns: repeat({{ products_to_show }}, minmax(280px, 1fr));
    {% endif %}
  }

  {% if section.settings.enable_carousel %}
    .featured-products__grid::-webkit-scrollbar {
      display: none;
    }

    .featured-products__item {
      scroll-snap-align: start;
    }
  {% endif %}

  @media screen and (min-width: 750px) {
    .featured-products__grid {
      gap: var(--grid-desktop-horizontal-spacing) var(--grid-desktop-vertical-spacing);
      {% unless section.settings.enable_carousel %}
        grid-template-columns: repeat({{ section.settings.products_per_row_desktop }}, 1fr);
      {% endunless %}
    }
  }

  @media screen and (min-width: 990px) {
    .featured-products__grid {
      {% unless section.settings.enable_carousel %}
        grid-template-columns: repeat({{ section.settings.products_per_row_desktop }}, 1fr);
      {% endunless %}
    }
  }

  /* Carousel navigation */
  .featured-products__navigation {
    display: {% if section.settings.enable_carousel %}flex{% else %}none{% endif %};
    justify-content: center;
    gap: 1rem;
    margin-top: 3rem;
  }

  .carousel-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 4.5rem;
    height: 4.5rem;
    background: rgb(var(--color-base-background-1));
    border: 2px solid rgb(var(--color-base-accent-1));
    border-radius: 50%;
    color: rgb(var(--color-base-accent-1));
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .carousel-btn:hover {
    background: rgb(var(--color-base-accent-1));
    color: rgb(var(--color-base-solid-button-labels));
    transform: scale(1.1);
  }

  .carousel-btn:disabled {
    opacity: 0.3;
    cursor: not-allowed;
    transform: none;
  }

  .featured-products__dots {
    display: {% if section.settings.enable_carousel %}flex{% else %}none{% endif %};
    justify-content: center;
    gap: 1rem;
    margin-top: 2rem;
  }

  .carousel-dot {
    width: 1rem;
    height: 1rem;
    border-radius: 50%;
    background: rgba(var(--color-base-text), 0.3);
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .carousel-dot.active {
    background: rgb(var(--color-base-accent-1));
    transform: scale(1.3);
  }

  /* Animation */
  .animate-on-scroll {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.6s ease;
  }

  .animate-on-scroll.animate-in {
    opacity: 1;
    transform: translateY(0);
  }

  /* Stagger animation delay */
  .featured-products__item:nth-child(1) { transition-delay: 0.1s; }
  .featured-products__item:nth-child(2) { transition-delay: 0.2s; }
  .featured-products__item:nth-child(3) { transition-delay: 0.3s; }
  .featured-products__item:nth-child(4) { transition-delay: 0.4s; }
  .featured-products__item:nth-child(5) { transition-delay: 0.5s; }
  .featured-products__item:nth-child(6) { transition-delay: 0.6s; }
  .featured-products__item:nth-child(7) { transition-delay: 0.7s; }
  .featured-products__item:nth-child(8) { transition-delay: 0.8s; }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const featuredSection = document.querySelector('.featured-products');
    const grid = featuredSection?.querySelector('.featured-products__grid');
    const prevBtn = featuredSection?.querySelector('.carousel-btn--prev');
    const nextBtn = featuredSection?.querySelector('.carousel-btn--next');
    const dotsContainer = featuredSection?.querySelector('.featured-products__dots');
    
    {% if section.settings.enable_carousel %}
    if (grid && prevBtn && nextBtn) {
      const items = grid.querySelectorAll('.featured-products__item');
      const itemWidth = items[0]?.offsetWidth || 300;
      const itemsPerView = Math.floor(grid.offsetWidth / itemWidth);
      const totalPages = Math.ceil(items.length / itemsPerView);
      let currentPage = 0;

      // Create dots
      if (dotsContainer && totalPages > 1) {
        for (let i = 0; i < totalPages; i++) {
          const dot = document.createElement('button');
          dot.classList.add('carousel-dot');
          dot.addEventListener('click', () => goToPage(i));
          dotsContainer.appendChild(dot);
        }
        updateDots();
      }

      function updateButtons() {
        prevBtn.disabled = currentPage === 0;
        nextBtn.disabled = currentPage >= totalPages - 1;
      }

      function updateDots() {
        const dots = dotsContainer?.querySelectorAll('.carousel-dot');
        dots?.forEach((dot, index) => {
          dot.classList.toggle('active', index === currentPage);
        });
      }

      function goToPage(page) {
        currentPage = Math.max(0, Math.min(page, totalPages - 1));
        const scrollAmount = currentPage * itemWidth * itemsPerView;
        grid.scrollTo({
          left: scrollAmount,
          behavior: 'smooth'
        });
        updateButtons();
        updateDots();
      }

      prevBtn.addEventListener('click', () => {
        goToPage(currentPage - 1);
      });

      nextBtn.addEventListener('click', () => {
        goToPage(currentPage + 1);
      });

      // Touch/swipe support
      let startX = 0;
      let isDown = false;

      grid.addEventListener('mousedown', (e) => {
        isDown = true;
        startX = e.pageX - grid.offsetLeft;
      });

      grid.addEventListener('mouseleave', () => {
        isDown = false;
      });

      grid.addEventListener('mouseup', () => {
        isDown = false;
      });

      grid.addEventListener('mousemove', (e) => {
        if (!isDown) return;
        e.preventDefault();
        const x = e.pageX - grid.offsetLeft;
        const walk = (x - startX) * 2;
        grid.scrollLeft = grid.scrollLeft - walk;
      });

      // Touch events
      grid.addEventListener('touchstart', (e) => {
        startX = e.touches[0].pageX - grid.offsetLeft;
      });

      grid.addEventListener('touchmove', (e) => {
        const x = e.touches[0].pageX - grid.offsetLeft;
        const walk = (x - startX) * 2;
        grid.scrollLeft = grid.scrollLeft - walk;
      });

      // Update on scroll
      grid.addEventListener('scroll', () => {
        const newPage = Math.round(grid.scrollLeft / (itemWidth * itemsPerView));
        if (newPage !== currentPage) {
          currentPage = newPage;
          updateButtons();
          updateDots();
        }
      });

      // Initialize
      updateButtons();
    }
    {% endif %}

    // Intersection Observer for animations
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-in');
        }
      });
    }, observerOptions);

    // Observe all animate-on-scroll elements
    const animateElements = featuredSection?.querySelectorAll('.animate-on-scroll');
    animateElements?.forEach(el => observer.observe(el));
  });
</script>

{% schema %}
{
  "name": "Featured Products",
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "heading",
      "default": "Featured Footwear",
      "label": "Heading"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 2,
      "max": 5,
      "step": 0.2,
      "default": 3.2,
      "unit": "rem",
      "label": "Heading size"
    },
    {
      "type": "textarea",
      "id": "description",
      "default": "Discover our handpicked selection of premium shoes designed for style, comfort, and performance.",
      "label": "Description"
    },
    {
      "type": "range",
      "id": "description_size",
      "min": 1.2,
      "max": 2,
      "step": 0.1,
      "default": 1.6,
      "unit": "rem",
      "label": "Description size"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 12,
      "step": 1,
      "default": 8,
      "label": "Products to show"
    },
    {
      "type": "checkbox",
      "id": "show_view_all",
      "default": true,
      "label": "Show 'View all' button"
    },
    {
      "type": "text",
      "id": "view_all_text",
      "default": "View All",
      "label": "'View all' button text"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "products_per_row_desktop",
      "options": [
        {
          "value": "2",
          "label": "2 products per row"
        },
        {
          "value": "3",
          "label": "3 products per row"
        },
        {
          "value": "4",
          "label": "4 products per row"
        },
        {
          "value": "5",
          "label": "5 products per row"
        }
      ],
      "default": "4",
      "label": "Products per row on desktop"
    },
    {
      "type": "checkbox",
      "id": "enable_carousel",
      "default": false,
      "label": "Enable carousel on mobile",
      "info": "Products will scroll horizontally on mobile devices"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "default": "#ffffff",
      "label": "Background color"
    },
    {
      "type": "color",
      "id": "heading_color",
      "default": "#000000",
      "label": "Heading color"
    },
    {
      "type": "color",
      "id": "text_color",
      "default": "#666666",
      "label": "Text color"
    },
    {
      "type": "image_picker",
      "id": "background_image",
      "label": "Background image"
    }
  ],
  "presets": [
    {
      "name": "Featured Products"
    }
  ]
}
{% endschema %}
